{"version":3,"sources":["img/ico-bg-transparent.svg","content.tsx","components/Header.tsx","components/Footer.tsx","components/ContentRow.tsx","components/ContentSpace.tsx","components/RepoBlock.tsx","components/RepoVersion.tsx","components/RepoBlockItem.tsx","components/FeatureBlock.tsx","components/FeatureBlockItem.tsx","img/ico--alt-bg-transparent.svg","img/ico--alt-bg-grey-transparent.svg","img/structure.svg","components/SkeletonBlockItem.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["skeletonRepo","projectName","projectKey","description","command","includes","target","href","rel","mainRepo","badges","feature","name","icon","dots","otherRepo","cat","repo","menuItems","url","mobile","Header","props","className","height","src","Ico","alt","map","type","onClick","window","open","Footer","filter","menu","ContentRow","hideLine","children","title","smoke","defaultProps","undefined","ContentSpace","RepoBlock","RepoVersion","useState","version","setVersion","useEffect","a","fetch","res","json","Array","isArray","length","console","error","openNew","RepoBlockItem","item","dot","LinkBlock","FeatureBlockItem","SkeletonBlockItem","Content","logog","FeatureBlock","fea","width","struct","style","border","borderRadius","overflow","allow","sandbox","ob","App","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18fa4617.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ico-bg-transparent.e5f07dcd.svg\";","import React, { ReactNode } from 'react';\r\n\r\nimport {\r\n  AiOutlineCode,\r\n  BsCodeSquare,\r\n  BsReverseLayoutTextSidebarReverse,\r\n  FaGithub,\r\n  GiCardboardBox,\r\n  HiOutlineDatabase,\r\n  IoKeyOutline,\r\n  RiFileSettingsLine,\r\n  RiToolsLine,\r\n  SiDatabricks,\r\n  SiReadthedocs,\r\n  SiSonarcloud,\r\n} from 'react-icons/all';\r\nimport { BadgeType } from './components/Badge';\r\n\r\nexport type RepoType = {\r\n  projectName: string;\r\n  projectKey: string;\r\n  description: string;\r\n  badges: BadgeType[];\r\n  includes?: ReactNode[];\r\n};\r\n\r\nexport type SkeletonType = {\r\n  projectName: string;\r\n  projectKey: string;\r\n  description: string;\r\n  command: string;\r\n  includes?: ReactNode[];\r\n};\r\n\r\nexport type FeatureType = {\r\n  description: string;\r\n  name: string;\r\n  icon: ReactNode;\r\n  dots: ReactNode[];\r\n};\r\n\r\nconst skeletonRepo: SkeletonType[] = [\r\n  {\r\n    projectName: 'Express-Skeleton',\r\n    projectKey: 'skeleton-project',\r\n    description: 'ExpressJS - Skeleton Project',\r\n    command: 'gltool --template=express',\r\n    includes: [\r\n      'Typescript Project setup with GLX-Kernel',\r\n      'Example Kernel',\r\n      'Example Module',\r\n      'Example Action',\r\n      'Jest Test setup',\r\n      'Typedoc setup',\r\n      'Eslint with Airbnb/Prettier config',\r\n      'AuthProvider with JWT',\r\n      <>\r\n        Clone the repository or use the{' '}\r\n        <a\r\n          target=\"_blank\"\r\n          href=\"https://grandlinex.github.io/docs/utils/#project-tool\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          project-tool\r\n        </a>\r\n      </>,\r\n    ],\r\n  },\r\n  {\r\n    projectName: 'Electron-Skeleton',\r\n    projectKey: 'electron-skeleton-project',\r\n    description: 'ElectronJS - Skeleton Project',\r\n    command: 'gltool --template=electron',\r\n    includes: [\r\n      'Typescript Project setup with GLX-E-Kernel',\r\n      'Example Kernel',\r\n      'Example Module',\r\n      'Example Action',\r\n      'Eslint with Airbnb/Prettier config',\r\n      <>\r\n        Clone the repository or use the{' '}\r\n        <a\r\n          target=\"_blank\"\r\n          href=\"https://grandlinex.github.io/docs/utils/#project-tool\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          project-tool\r\n        </a>\r\n      </>,\r\n    ],\r\n  },\r\n];\r\nconst mainRepo: RepoType[] = [\r\n  {\r\n    projectName: 'Core-Package',\r\n    projectKey: 'core',\r\n    description: 'Minimal dependency base kernel module',\r\n    badges: ['CORE'],\r\n    includes: ['No other bundles', 'Only one dependecy'],\r\n  },\r\n  {\r\n    projectName: 'Express-Package',\r\n    projectKey: 'kernel',\r\n    description: 'ExpressJS - Kernel module',\r\n    badges: ['KERNEL'],\r\n    includes: [\r\n      '@grandlinex/core',\r\n      '@grandlinex/bundle-elogger',\r\n      '@grandlinex/bundle-sqlight',\r\n      '@grandlinex/bundle-postgresql',\r\n      '@express.js',\r\n    ],\r\n  },\r\n  {\r\n    projectName: 'Electron-Package',\r\n    projectKey: 'e-kernel',\r\n    description: 'ElectronJS - Kernel module',\r\n    badges: ['E-KERNEL'],\r\n    includes: [\r\n      '@grandlinex/core',\r\n      '@grandlinex/bundle-elogger',\r\n      '@grandlinex/bundle-sqlight',\r\n      '@electron.js',\r\n    ],\r\n  },\r\n];\r\n\r\nconst feature: FeatureType[] = [\r\n  {\r\n    name: 'Entity Model (ORM)',\r\n    icon: <HiOutlineDatabase />,\r\n    description: `Build in entity relation model.`,\r\n    dots: [\r\n      'Use a couple of DBInterfaces to store persistent data',\r\n      'Create, update, find and delete entities',\r\n      'Database versioning + migration interfaces',\r\n      'See: SQLight- or Postgresql-Bundle',\r\n      'Build in core : InMemDB',\r\n    ],\r\n  },\r\n  {\r\n    name: 'Caching',\r\n    icon: <SiDatabricks />,\r\n    description: `Build in cache system.`,\r\n    dots: [\r\n      'Cache system for exiting entity models',\r\n      'Module scoped KeyValue store',\r\n      'See: Redis-Bundle',\r\n      'Build in core : InMemCache',\r\n    ],\r\n  },\r\n  {\r\n    name: 'Multi Channel Logging',\r\n    icon: <BsReverseLayoutTextSidebarReverse />,\r\n    description: `Build in Logging support.`,\r\n    dots: [\r\n      'Every GLX-Component have his own log channel',\r\n      'See: ElectronLog-Bundle',\r\n      'Build in core : DefaultLogger',\r\n    ],\r\n  },\r\n  {\r\n    name: 'Credential store',\r\n    icon: <IoKeyOutline />,\r\n    description: `Build in Credential/Key store.`,\r\n    dots: [\r\n      'Save encrypted credentials for your program with AES-256',\r\n      'See: Core Package',\r\n      'Build in core : CoreCryptoClient',\r\n    ],\r\n  },\r\n  {\r\n    name: 'Kernel & Modul Structure ',\r\n    icon: <GiCardboardBox />,\r\n    description: `Pre structured project setup.`,\r\n    dots: [\r\n      'Build new ModulesBundles for your needs',\r\n      'Extending the your KernelPackage with your own bundles',\r\n      'Connect bundles with bridges for internal resource sharing',\r\n    ],\r\n  },\r\n  {\r\n    name: 'Project-Tool',\r\n    icon: <AiOutlineCode />,\r\n    description: `CLI for GrandLineX Projects.`,\r\n    dots: [\r\n      'Update GLX-Dependencies',\r\n      'Init new GLX-Projects with customizable options',\r\n      'See: project-tool',\r\n    ],\r\n  },\r\n  {\r\n    name: 'Env Store',\r\n    icon: <RiFileSettingsLine />,\r\n    description: `Global configuration store`,\r\n    dots: ['Load from .env file', 'Override configurations in your code'],\r\n  },\r\n  {\r\n    name: 'Background Service',\r\n    icon: <RiToolsLine />,\r\n    description: `Loop service interface.`,\r\n    dots: ['Create looping background services'],\r\n  },\r\n  {\r\n    name: 'Open Source',\r\n    icon: <BsCodeSquare />,\r\n    description: `Core Packages with BSD-3 licence.`,\r\n    dots: ['Join on GitHub'],\r\n  },\r\n];\r\n\r\nconst otherRepo: { cat: string; repo: RepoType[] }[] = [\r\n  {\r\n    cat: 'Database & Cache-Bundles',\r\n    repo: [\r\n      {\r\n        projectName: 'Postgresql-Bundle',\r\n        projectKey: 'bundle-postgresql',\r\n        description: 'Postgresql support using pg',\r\n        badges: [],\r\n      },\r\n      {\r\n        projectName: 'SQLight-Bundle',\r\n        projectKey: 'bundle-sqlight',\r\n        description: 'SQLight support using better-sqlite3',\r\n        badges: [],\r\n      },\r\n      {\r\n        projectName: 'Redis-Bundle',\r\n        projectKey: 'bundle-redis',\r\n        description: 'Redis cache support using redis',\r\n        badges: [],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    cat: 'Core-Bundles',\r\n    repo: [\r\n      {\r\n        projectName: 'MultiLang-Bundle',\r\n        projectKey: 'bundle-multilang',\r\n        description: 'Multilang support for GrandLineX',\r\n        badges: [],\r\n      },\r\n      {\r\n        projectName: 'Electron-Log-Bundle',\r\n        projectKey: 'bundle-elogger',\r\n        description: 'Advanced logging support using electron-log',\r\n        badges: [],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    cat: 'Express-Bundles',\r\n    repo: [\r\n      {\r\n        projectName: 'Simple-Auth-Bundle',\r\n        projectKey: 'bundle-simple-auth',\r\n        description: 'Authorization & user management bundle',\r\n        badges: [],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    cat: 'Utils',\r\n    repo: [\r\n      {\r\n        projectName: 'GLX-Project-Tool',\r\n        projectKey: 'project-tool',\r\n        description: 'Create and update GLX projects',\r\n        badges: [],\r\n      },\r\n      {\r\n        projectName: 'Docs-to-OpenAPI',\r\n        projectKey: 'docs-to-openapi',\r\n        description: '@openapi annotation support for comment docs',\r\n        badges: [],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst menuItems: { name: ReactNode; url: string; mobile?: boolean }[] = [\r\n  { name: 'Docs', url: 'https://grandlinex.github.io/docs/' },\r\n  { name: 'Projects', url: 'https://github.com/GrandlineX/' },\r\n  {\r\n    name: 'Report',\r\n    url: 'https://sonarcloud.io/organizations/grandlinex/projects',\r\n  },\r\n  // Mobile\r\n  {\r\n    name: <SiReadthedocs />,\r\n    url: 'https://grandlinex.github.io/docs/',\r\n    mobile: true,\r\n  },\r\n  { name: <FaGithub />, url: 'https://github.com/GrandlineX/', mobile: true },\r\n  {\r\n    name: <SiSonarcloud />,\r\n    url: 'https://sonarcloud.io/organizations/grandlinex/projects',\r\n    mobile: true,\r\n  },\r\n];\r\n\r\nexport { feature, mainRepo, skeletonRepo, otherRepo, menuItems };\r\n","import React, { ReactNode } from 'react';\nimport Ico from '../img/ico-bg-transparent.svg';\nimport { menuItems } from '../content';\n\nconst Header: React.FC<any> = (props) => {\n  return (\n    <div className=\"glx-header\">\n      <div className=\"glx-header--content-left\">\n        <h1>\n          GrandLine <img height=\"40px\" src={Ico} alt=\"ico\" />\n        </h1>\n      </div>\n      <div className=\"glx-header--content-right\">\n        {menuItems.map(({ name, url, mobile }) => (\n          <button\n            className={mobile ? 'glx--only-on-desktop' : 'glx--hide-on-mobile'}\n            type=\"button\"\n            onClick={() => window.open(url, '_blank')}\n          >\n            {name}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { menuItems } from '../content';\n\nconst Footer: React.FC<any> = (props) => {\n  return (\n    <div className=\"glx-footer\">\n      <div className=\"glx--hide-on-mobile\">\n        <ul>\n          {menuItems\n            .filter((menu) => !menu.mobile)\n            .map((menu) => (\n              <li>\n                <a href={menu.url} target=\"_blank\" rel=\"noreferrer\">\n                  {menu.name}\n                </a>\n              </li>\n            ))}\n        </ul>\n      </div>\n      <div className=\"glx--only-on-desktop\">\n        {menuItems\n          .filter((menu) => menu.mobile)\n          .map((menu) => {\n            return (\n              <button\n                type=\"button\"\n                onClick={() => window.open(menu.url, '_blank')}\n              >\n                {menu.name}\n              </button>\n            );\n          })}\n      </div>\n      <div>\n        <ul>\n          <li>©GrandLineX</li>\n          <li>\n            <a href=\"https://github.com/Elschnagoo\">@ElSchnagoo</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { ReactNode } from 'react';\n\ntype ContentProps = {\n  children?: ReactNode;\n  title?: string;\n  icon?: ReactNode;\n  smoke?: boolean;\n  hideLine?: boolean;\n};\n\nconst ContentRow: React.FC<ContentProps> = (props) => {\n  const { hideLine, children, title, icon, smoke } = props;\n  return (\n    <div\n      className={`glx-content--row${smoke ? ' glx-content--row-smoke' : ''}`}\n    >\n      {title ? (\n        <>\n          <div className=\"title\">\n            {icon ? <span>{icon}</span> : null}\n            <span>{title}</span>\n          </div>\n        </>\n      ) : null}\n      {hideLine ? null : <hr />}\n      <div className=\"glx-content--row-body\">\n        <br />\n\n        {children}\n      </div>\n    </div>\n  );\n};\nContentRow.defaultProps = {\n  children: undefined,\n  title: undefined,\n  icon: undefined,\n  smoke: undefined,\n  hideLine: undefined,\n};\n\nexport default ContentRow;\n","import React, { ReactNode } from 'react';\n\ntype ContentProps = {\n  children?: ReactNode;\n};\n\nconst ContentSpace: React.FC<ContentProps> = (props) => {\n  const { children } = props;\n\n  return <div className=\"glx-content--space\">{children}</div>;\n};\nContentSpace.defaultProps = {\n  children: undefined,\n};\nexport default ContentSpace;\n","import React from 'react';\n\ntype ContentProps = {\n  children: React.ReactNode;\n};\n\nconst RepoBlock: React.FC<ContentProps> = (props) => {\n  const { children } = props;\n  return <div className=\"glx-repo--block\">{children}</div>;\n};\nexport default RepoBlock;\n","import React, { useEffect, useState } from 'react';\n\ntype ContentProps = {\n  projectKey: string;\n};\n\nconst RepoVersion: React.FC<ContentProps> = (props) => {\n  const { projectKey } = props;\n  const [version, setVersion] = useState<string | null | undefined>(undefined);\n  useEffect(() => {\n    if (version === undefined) {\n      (async () => {\n        try {\n          const res = await fetch(\n            `https://api.github.com/repos/GrandlineX/${projectKey}/tags`\n          );\n          const json = await res.json();\n\n          if (Array.isArray(json) && json.length > 0) {\n            setVersion(json[0].name);\n          }\n        } catch (e) {\n          console.error(e);\n          setVersion(null);\n        }\n      })();\n    }\n  });\n  return (\n    <span className=\"glx-repo--app-verison\">{version || 'no version'}</span>\n  );\n};\n\nexport default RepoVersion;\n","import React from 'react';\nimport { FaGithub, FaNpm, SiReadthedocs, SiSonarcloud } from 'react-icons/all';\nimport { BadgeType } from './Badge';\nimport RepoVersion from './RepoVersion';\nimport { RepoType } from '../content';\n\ntype ContentProps = {\n  projectName: string;\n  projectKey: string;\n  description?: string;\n  badges?: BadgeType[];\n};\n\nconst openNew = (\n  projectKey: string,\n  type: 'github' | 'docs' | 'sonar' | 'npm'\n) => {\n  let url = '';\n  switch (type) {\n    case 'sonar':\n      url = `https://sonarcloud.io/project/overview?id=GrandlineX_${projectKey}`;\n      break;\n    case 'github':\n      url = `https://github.com/GrandlineX/${projectKey}`;\n      break;\n    case 'docs':\n      url = `https://grandlinex.github.io/${projectKey}`;\n      break;\n    case 'npm':\n      url = `https://www.npmjs.com/package/@grandlinex/${projectKey}`;\n      break;\n    default:\n  }\n  window.open(url, '_blank');\n};\n\nconst RepoBlockItem: React.FC<{ item: RepoType }> = (props) => {\n  const { item } = props;\n  const { projectKey, description, projectName, badges, includes } = item;\n  return (\n    <div className=\"glx-repo--block-item\">\n      <h3 className=\"glx-mono\">{projectName} </h3>\n\n      <p className=\"glx-mono\">\n        Latest version: <RepoVersion projectKey={projectKey} />\n      </p>\n      <p className=\"glx-description\">{description}</p>\n      <pre className=\"glx--hide-on-mobile\">\n        <code>$ npm install @grandlinex/{projectKey} </code>\n      </pre>\n      {includes ? <p className=\"glx-description\">Includes:</p> : null}\n      <ul>\n        {includes?.map((dot) => (\n          <li>{dot}</li>\n        ))}\n      </ul>\n\n      <div className=\"glx-card-footer--space\" />\n      <div className=\"glx-card-footer\">\n        <hr />\n        <div className=\"glx-button-grid\">\n          <button type=\"submit\" onClick={() => openNew(projectKey, 'github')}>\n            <FaGithub />\n          </button>\n          <button type=\"submit\" onClick={() => openNew(projectKey, 'npm')}>\n            <FaNpm />\n          </button>\n          <button type=\"submit\" onClick={() => openNew(projectKey, 'docs')}>\n            <SiReadthedocs />\n          </button>\n          <button type=\"submit\" onClick={() => openNew(projectKey, 'sonar')}>\n            <SiSonarcloud />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RepoBlockItem;\n","import React from 'react';\n\ntype ContentProps = {\n  children: React.ReactNode;\n};\n\nconst LinkBlock: React.FC<ContentProps> = (props) => {\n  const { children } = props;\n  return (\n    <>\n      <div className=\"glx-feature--block\">{children}</div>\n      <br />\n    </>\n  );\n};\nexport default LinkBlock;\n","import React from 'react';\nimport { FeatureType } from '../content';\n\nconst FeatureBlockItem: React.FC<{ item: FeatureType }> = (props) => {\n  const { item } = props;\n  const { name, icon, description, dots } = item;\n  return (\n    <div className=\"glx-feature--block-item\">\n      <h3 className=\"glx-mono\">{name} </h3>\n      <p className=\"glx-icon\">{icon}</p>\n      <p className=\"glx-description\">Description:</p>\n      <p className=\"glx-description--text\">{description}</p>\n      <ul>\n        {dots.map((dot) => (\n          <li>{dot}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default FeatureBlockItem;\n","export default __webpack_public_path__ + \"static/media/ico--alt-bg-transparent.e83563e8.svg\";","export default __webpack_public_path__ + \"static/media/ico--alt-bg-grey-transparent.3049a2af.svg\";","export default __webpack_public_path__ + \"static/media/structure.77b7e012.svg\";","import React from 'react';\nimport { FaGithub, FaNpm, SiReadthedocs, SiSonarcloud } from 'react-icons/all';\nimport { BadgeType } from './Badge';\nimport RepoVersion from './RepoVersion';\nimport { RepoType, SkeletonType } from '../content';\n\ntype ContentProps = {\n  projectName: string;\n  projectKey: string;\n  description?: string;\n  badges?: BadgeType[];\n};\n\nconst openNew = (\n  projectKey: string,\n  type: 'github' | 'docs' | 'sonar' | 'npm'\n) => {\n  let url = '';\n  switch (type) {\n    case 'sonar':\n      url = `https://sonarcloud.io/project/overview?id=GrandlineX_${projectKey}`;\n      break;\n    case 'github':\n      url = `https://github.com/GrandlineX/${projectKey}`;\n      break;\n    case 'docs':\n      url = `https://grandlinex.github.io/${projectKey}`;\n      break;\n    case 'npm':\n      url = `https://www.npmjs.com/package/@grandlinex/${projectKey}`;\n      break;\n    default:\n  }\n  window.open(url, '_blank');\n};\n\nconst SkeletonBlockItem: React.FC<{ item: SkeletonType }> = (props) => {\n  const { item } = props;\n  const { projectKey, description, projectName, command, includes } = item;\n  return (\n    <div className=\"glx-repo--block-item\">\n      <h3 className=\"glx-mono\">{projectName} </h3>\n\n      <p className=\"glx-description\">{description}</p>\n\n      <pre className=\"glx--hide-on-mobile\">\n        <code>{command} </code>\n      </pre>\n\n      {includes ? <p className=\"glx-description\">Includes:</p> : null}\n      <ul>\n        {includes?.map((dot) => (\n          <li>{dot}</li>\n        ))}\n      </ul>\n\n      <div className=\"glx-card-footer--space\" />\n      <div className=\"glx-card-footer\">\n        <hr />\n        <div className=\"glx-button-grid\">\n          <button type=\"submit\" onClick={() => openNew(projectKey, 'github')}>\n            <FaGithub />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SkeletonBlockItem;\n","import React from 'react';\nimport { AiOutlineCodeSandbox } from 'react-icons/all';\nimport {\n  ContentSpace,\n  Footer,\n  Header,\n  RepoBlock,\n  RepoBlockItem,\n} from './components';\nimport logo from './img/ico--alt-bg-transparent.svg';\nimport logog from './img/ico--alt-bg-grey-transparent.svg';\nimport struct from './img/structure.svg';\nimport ContentRow from './components/ContentRow';\nimport FeatureBlock from './components/FeatureBlock';\nimport FeatureBlockItem from './components/FeatureBlockItem';\nimport { feature, mainRepo, otherRepo, skeletonRepo } from './content';\nimport SkeletonBlockItem from './components/SkeletonBlockItem';\n\nconst Content: React.FC<any> = (props) => {\n  return (\n    <>\n      <ContentSpace />\n      <ContentRow\n        icon={<img height=\"30px\" src={logog} alt=\"logo\" />}\n        title=\"Packages\"\n      >\n        <RepoBlock>\n          {mainRepo.map((repo) => (\n            <RepoBlockItem item={repo} />\n          ))}\n        </RepoBlock>\n      </ContentRow>\n      <ContentSpace />\n      <ContentRow\n        icon={<img height=\"30px\" src={logog} alt=\"logo\" />}\n        title=\"Features\"\n      >\n        <FeatureBlock>\n          {feature.map((fea) => (\n            <FeatureBlockItem item={fea} />\n          ))}\n        </FeatureBlock>\n      </ContentRow>\n      <ContentSpace />\n      <ContentRow\n        icon={<img height=\"30px\" src={logog} alt=\"logo\" />}\n        title=\"Basic structure\"\n      >\n        <FeatureBlock>\n          <div>\n            <img width=\"100%\" alt=\"sruct\" src={struct} />\n          </div>\n        </FeatureBlock>\n      </ContentRow>\n      <ContentSpace />\n      <ContentRow smoke icon={<AiOutlineCodeSandbox />} title=\"CodeSandbox\">\n        <FeatureBlock>\n          <div className=\"glx-sandbox\">\n            <iframe\n              src=\"https://codesandbox.io/embed/grandlinex-express-kernel-7bib3?fontsize=14&hidenavigation=1&theme=dark\"\n              style={{\n                width: '100%',\n                height: '500px',\n                border: 0,\n                borderRadius: '4px',\n                overflow: 'hidden',\n              }}\n              title=\"GrandlineX-Express-Kernel\"\n              allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n              sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n            />\n          </div>\n        </FeatureBlock>\n      </ContentRow>\n      <ContentSpace />\n      <ContentRow\n        icon={<img height=\"30px\" src={logog} alt=\"logo\" />}\n        title=\"Skeleton Projects\"\n      >\n        <RepoBlock>\n          {skeletonRepo.map((repo) => (\n            <SkeletonBlockItem item={repo} />\n          ))}\n        </RepoBlock>\n      </ContentRow>\n      {otherRepo.map((ob) => (\n        <>\n          <ContentSpace />\n          <ContentRow\n            icon={<img height=\"30px\" src={logog} alt=\"logo\" />}\n            title={ob.cat}\n          >\n            <RepoBlock>\n              {ob.repo.map((repo) => (\n                <RepoBlockItem item={repo} />\n              ))}\n            </RepoBlock>\n          </ContentRow>\n        </>\n      ))}\n    </>\n  );\n};\nconst App: React.FC<any> = (props) => {\n  return (\n    <>\n      <Header />\n      <div className=\"glx-content--spacer-header\" />\n      <div className=\"glx-preview\">\n        <div>\n          <img src={logo} alt=\"logo\" />\n        </div>\n        <div className=\"glx-mono\">\n          GrandLineX is an modular out-of-the-box framework written in\n          typescript.\n        </div>\n      </div>\n      <div className=\"glx-content\">\n        <Content />\n      </div>\n      <div className=\"glx-content--spacer-header\" />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}